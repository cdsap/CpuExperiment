name: Build

on:
    push:
        branches:
            - main
    pull_request:

concurrency:
    group: build-${{ github.ref }}
    cancel-in-progress: true

jobs:
    iterations:
        name: Generate versions
        runs-on: ubuntu-latest
        steps:
            -   id: calculate_iterations
                run: |
                    iterations=" ["
                    for i in {1..1}
                    do
                      if [ $i == 1 ]
                      then
                        iterations="$iterations \"$i\""
                      else
                        iterations="$iterations  , \"$i\""
                      fi
                    done
                    iterations="$iterations ]"
                    echo "iterations=$iterations" >> $GITHUB_OUTPUT
                    echo $GITHUB_OUTPUT
        outputs:
            iterations: ${{ steps.calculate_iterations.outputs.iterations }}

    test_and_apk:
        needs: [ iterations ]
        strategy:
            matrix:
                workers:  [1000,10000,100000]
                runs: ${{ fromJson(needs.iterations.outputs.iterations) }}

        name: "Local tests and APKs"
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write

        timeout-minutes: 60

        steps:
            -   name: Collect Workflow Telemetry
                uses: catchpoint/workflow-telemetry-action@v2

            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    distribution: 'zulu'
                    java-version: 17
            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v4
              with:
                 cache-read-only: false
            -   name: Assemble Release
                run: |
                    sudo apt-get update && sudo apt-get install -y fio
                    fio --name=iops_test --ioengine=posixaio --runtime=60  --rw=randrw --rwmixread=50 --bs=4k --size=1G --time_based --group_reporting --iodepth=256 --numjobs=16 --direct=0 --verify=crc32
                    fio --name=random_read_write --ioengine=posixaio --runtime=720 --rw=randrw --rwmixread=50  --bs=4k --size=1G --time_based  --group_reporting -iodepth=256 --numjobs=16 --direct=0 --verify=crc32 --rate_iops=${{ matrix.workers }} &
                    ./gradlew clean assembleDebug -Dscan.tag.6new-fio-experiment  -Dscan.tag.itops-${{ matrix.workers }}- -Dscan.tag.assembleDebug
                    wait
                env:
                    GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}

